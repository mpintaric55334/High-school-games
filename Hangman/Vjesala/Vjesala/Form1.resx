<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>